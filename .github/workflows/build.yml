name: Build
on: [push]
jobs:
  build-test:
    timeout-minutes: 5
    name: Build & Test
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0 
          
      - name: Install coverlet
        id: install-coverlet
        run: |
          dotnet tool install --global dotnet-coverage
          
      - name: Build
        id: build
        run: |
          dotnet build --no-incremental
      
      - name: Docker Compose Action
        uses: isbang/compose-action@v1.2.0

      - name: Test
        id: test
        run: |
          dotnet-coverage collect 'dotnet test' -f xml  -o 'coverage.xml'

      - name: Docker Down
        id: docker-down
        run: |
          docker compose down
  
  build:
    timeout-minutes: 5
    name: Build
    runs-on: windows-latest
    steps:
      - name: Set up JDK 11
        uses: actions/setup-java@v1
        with:
          java-version: 1.11
          
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0  # Shallow clones should be disabled for a better relevancy of analysis
          
      - name: Install SonarCloud scanner
        run: |
         dotnet tool update --global dotnet-sonarscanner
          
      - name: Install coverlet
        id: install-coverlet
        run: |
          dotnet tool install --global dotnet-coverage
          
      - name: Build and analyze
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}  # Needed to get PR information, if any
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        shell: powershell
        run: |
          dotnet-sonarscanner begin /k:"Tr00d_CleanEventSourcing" /o:"tr00d-orga" /d:sonar.login="${{ secrets.SONAR_TOKEN }}" /d:sonar.host.url="https://sonarcloud.io" /d:sonar.cs.vscoveragexml.reportsPaths=coverage.xml
          dotnet build --no-incremental
          dotnet-coverage collect 'dotnet test' -f xml  -o 'coverage.xml'
          dotnet-sonarscanner end /d:sonar.login="${{ secrets.SONAR_TOKEN }}"
